name: "vprofile_iac"
on: 
  push:
    branches:
    - main 
    - stage
    paths:
    - terraform/**
  pull_request:
    branches:
    - main
    paths:
    - terraform/**

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  AWS_REGION: us-east-2
  EKS_CLUSTER_NAME: gitops-eks

jobs:
  terraform:
    name: "Apply terraform code changes"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./terraform
    steps:
    - name: checkout the source code
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.6.3

    - name: Initialize Terraform
      id: init
      run: terraform init -backend-config="bucket=${BUCKET_TF_STATE}"
    
    - name: terraform format
      id: fmt
      run: terraform fmt -check

    - name: terraform validate
      id: validate
      run: terraform validate
    
    - name: terraform plan
      id: plan
      run: terraform plan -out=tfplan -input=false
      continue-on-error: true

    - name: terraform plans status
      if: steps.plan.outcome == 'failure'
      run: echo "Terraform Plan Failed" && cat tfplan && exit 1

    - name: terraform apply
      id: terraform_plan
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply -auto-approve -input=false -parallelism=1 tfplan

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Get Kube config file
      id: kubeconfig
      if : steps.terraform_apply.outcome == 'success'
      run: aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}

    - name: Install Ingress controller
      if: steps.terraform_apply.outcome == 'success'
      run: kubectl apply -f htts://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.1.0/deploy/static/provider/aws/deploy.yaml

    - name: terraform destroy
      run: terraform destroy -auto-approve